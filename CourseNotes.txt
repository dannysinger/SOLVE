*NORMALIZE* - Sets all browsers standardly! 
   
   - Box-sizing: webkit moz etc. 
   
        - CSS quirk: The content extends beyond the wrapper and doesn't know            how big it actually is... 
        
                - Solve with .wrapper{ overflow:hidden } 
                
                    -This works great but the downside is that you often don’t                      want to hide the overflow of something because you want to                      overlap or extend elements outside the wrapper. (HackerYou                      5 - floats and typography).
    
FLOATS

FONTAWESOME // Line 47

FAVICON // Line 69

TREEHOUSE // RESPONSIVE // Line 79

CODESCHOOL // RESPONSIVE // Line 119

derekfogge [12:15 PM] 
forced memorization is a waste of energy imo. you can never know everything and prioritizing what to memorize vs always look up is impossible.

derekfogge [12:17 PM] 
if you know how to problem solve you'll be good :wink:

taronjamal [12:17 PM] 
yup. im hearing that people skills are equally important.

derekfogge [12:18 PM] 
very important. no one wants to work with jerks

taronjamal [12:18 PM] 
lol.

taronjamal [12:18 PM]
i cringe when i meet one.

sako [12:18 PM] 
especially in a team oriented industry

that was an oversimplification, but you get the point. Most employers are more interested in you know how to seek the answers to odd problems, than quickly build the day to day things

Definitely be open with your interviewer about your skill level, but don’t sell yourself short. Eagerness to learn new things, and ability to problem solve are huge. I started off with a code challenge, then worked a couple days a week for a month or so just so they could see I was able to back up what I said, but they were very willing to work with my schedule. I think the biggest thing is eagerness. When they ask if you know something, and you don’t. Ask about it. try to relate it to something you do know. “Do you know xxx data parsing library?” “No, can you tell me what it does?” Try to get an idea for what the company uses _before_ the interview. Stalk them get to know their staff a little from their bio’s. Try to get an idea of what type of environment it will be. Casual and fun? Very strict? That will give you an idea of how to dress, present yourself, and speak with the people. Stalk their clients. Get to know the work they do> relate to it anyway that makes sense. I come from a restaurant background, my company specializes in member based organizations… there’s a clear client first mentality that we share. Get to know the tech they use, look at their code. Build something with the same plugins/ addons they use. Then when you have your interview you can say, I saw you used this, so I made this small demo to get to know it a little. Shows commitment to the interview/ job search


FONT AWESOME 

- "Scalable Vector" 

    - "fontawesome.github.io/Font-Awesome/"

        -  Zip File - "/CSS" , "/Fonts" 
    
            - /CSS
    
                - Minified, Original versions
        
        - Add "Fonts" folder, copy in data. 
        
<       
link href="
//maxcdn.bootstrapcdn.com/
font-awesome/4.2.0/css/
font-awesome.min.css" 
rel="stylesheet"
> 

FAVICON

Create a 16x16 image. If you want transparency, use the PNG or GIF format.
Convert your image to .ico format using a free service such as favicon.cc.
Upload the new icon to http://www.yourdomain.com/favicon.ico . 

<link rel="shortcut icon" href="/images/specialicon.ico" type="image/x-icon" />

For finer control, use the code above to specify favicons on a page-by-page basis.

TREEHOUSE / RESPONSIVE

- Stylesheets standardized for elements accross multiple pages of a site
- Main CSS file built for smallest format

    - Next File built with media queries for larger and larger devices. 
    - @media screen and (min-width: ...) { } 
    
    - Set a background color to activate. 
    
    - Interesting to see how they've done it with standard 320, 480, 660. 
    
    - Seems like to correctly judge this shit you would need to have some sort 
    of eye for design. 
    
    - Floating left, and then right avoids unexpected browser issues as opposed 
    to left then subsequent left. 
    
    - Using margins as %s and widths, thinking in general in terms of %s. 
    
    - Large decimal #s are common in advanced responsive. 
    
    - There is a nice <li> picture gallery project for Treehouse html
    
        - They have a nice way of clearING: left every :nth-child(4);
        
    - On profile page, all you need to do is float picture to left and add some     margin.
    
        - Added an 80px just in case text wrapped around the bottom (Four 
        values NESW, Three values (top horiz bottom), (vert horiz)
        
    - // MENU Location // Floated right on desk, center on mobile
    
    - 5pixel border
    
    - VIEWPORT METATAG
    
    - // Note final breakpoint: 660 ///
    

CODESCHOOL / RESPONSIVE

- FLUID LAYOUTS - ADAPTIVE DESIGN - RESPONSIVE DESIGN  -

        - 16px standard - 
        
            - Target (font size) / Context ( font size in containing element) =                 Result - 
            
            - OR Result (em) * Context = Target (px) - 
            
            - Basically The em multiplies whatever you set the percentage                     (default font-size) to by whatever (Specific Target) it is. - 
            
                - This "percentage" or "context" is whatever is in the parent                   (Even if the parent is relative to the body it starts a chain).
                
- FLUID LAYOUTS (WOW!)
    
        - FLUID GRID: A series of evenly spaced (same size) COLUMNS accross the         page (Like a Greek Structure). 
        
        - PERCENTAGE WIDTHS, for example, on a sidebar are RELATIVE TO THE             PARENT. 
        
        - WOW @ setting percentages for margin, padding and everything!
        
             - Note in example it's a thing with a lot of text and the text                 doesn't actually change size...
             
        - WHEN TO SET BREAKPOINTS
        
            - When things get to crammed
            - When menu's get too skinny
            - WHITE SPACE!!! 
            - Float >>> Stack
        
        - What does LINE-HEIGHT do??? Codrops!!!!
            - But apparently context for line-height is font-size. 
            









